{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_BASEURL\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const signIn = FormData => API.post('/users/signin', FormData);\nexport const signUp = FormData => API.post('/users/signup', FormData);","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_BASEURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","patch","updatePost","updatedPost","deletePost","delete","signIn","FormData","signUp"],"sources":["D:/projects/mern2/client/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({baseURL: process.env.REACT_APP_BASEURL })\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem('profile')){\r\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`\r\n    }\r\n    return req;\r\n})\r\n\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n\r\nexport const signIn = (FormData) => API.post('/users/signin', FormData);\r\nexport const signUp = (FormData) => API.post('/users/signup', FormData);\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAACC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAtB,CAAb,CAAZ;AAEAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;EAClC,IAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAmC;IAC/BF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;EACH;;EACD,OAAOP,GAAP;AACH,CALD;AAOA,OAAO,MAAMQ,SAAS,GAAIC,EAAD,IAAQlB,GAAG,CAACmB,GAAJ,CAAS,UAASD,EAAG,EAArB,CAA1B;AACP,OAAO,MAAME,UAAU,GAAIC,IAAD,IAAUrB,GAAG,CAACmB,GAAJ,CAAS,eAAcE,IAAK,EAA5B,CAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAIC,WAAD,IAAiBvB,GAAG,CAACmB,GAAJ,CAAS,6BAA4BI,WAAW,CAACC,MAAZ,IAAsB,MAAO,SAAQD,WAAW,CAACE,IAAK,EAA3F,CAA5C;AACP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa3B,GAAG,CAAC4B,IAAJ,CAAS,QAAT,EAAmBD,OAAnB,CAAhC;AACP,OAAO,MAAME,QAAQ,GAAIX,EAAD,IAAQlB,GAAG,CAAC8B,KAAJ,CAAW,UAASZ,EAAG,WAAvB,CAAzB;AACP,OAAO,MAAMa,UAAU,GAAG,CAACb,EAAD,EAAKc,WAAL,KAAqBhC,GAAG,CAAC8B,KAAJ,CAAW,UAASZ,EAAG,EAAvB,EAA0Bc,WAA1B,CAAxC;AACP,OAAO,MAAMC,UAAU,GAAIf,EAAD,IAAQlB,GAAG,CAACkC,MAAJ,CAAY,UAAShB,EAAG,EAAxB,CAA3B;AAEP,OAAO,MAAMiB,MAAM,GAAIC,QAAD,IAAcpC,GAAG,CAAC4B,IAAJ,CAAS,eAAT,EAA0BQ,QAA1B,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAcpC,GAAG,CAAC4B,IAAJ,CAAS,eAAT,EAA0BQ,QAA1B,CAA7B"},"metadata":{},"sourceType":"module"}