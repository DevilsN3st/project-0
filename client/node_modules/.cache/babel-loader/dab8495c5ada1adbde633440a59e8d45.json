{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(\"data fetched\");\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log('data received');\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","START_LOADING","END_LOADING","FETCH_BY_SEARCH","api","getPost","id","dispatch","type","data","fetchPost","console","log","payload","error","message","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","likePost","deletePost"],"sources":["D:/projects/mern2/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING, FETCH_BY_SEARCH } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\n  export const getPost = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.fetchPost(id);\n      console.log(\"data fetched\");\n      dispatch({ type: FETCH_POST, payload: data });\n      dispatch({ type: END_LOADING });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  export const getPosts = (page) => async (dispatch) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.fetchPosts(page);\n      \n      dispatch({ type: FETCH_ALL, payload: data });\n      dispatch({ type: END_LOADING });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  export const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.fetchPostsBySearch(searchQuery);\n      console.log('data received');\n      dispatch({ type: FETCH_BY_SEARCH, payload: data });\n      dispatch({ type: END_LOADING });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const createPost = (post) => async (dispatch) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}