{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = () => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","api","getPost","id","dispatch","type","START_LOADING","data","fetchPost","payload","END_LOADING","error","console","log","message","getPosts","fetchPosts","createPost","post","updatePost","likePost","deletePost"],"sources":["D:/projects/mern2/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\n  export const getPost = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.fetchPost(id);\n      \n      dispatch({ type: FETCH_POST, payload: data });\n      dispatch({ type: END_LOADING });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  export const getPosts = () => async (dispatch) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.fetchPosts();\n      \n      dispatch({ type: FETCH_ALL, payload: data });\n      dispatch({ type: END_LOADING });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}