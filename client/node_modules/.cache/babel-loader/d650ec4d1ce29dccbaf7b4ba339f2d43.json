{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\mern2\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login'; // import { GoogleLogin } from '@react-oauth/google';\n\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './input';\nimport Icon from './icon';\n\nfunction Auth() {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(true);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokeId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(res);\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google Sign In was usuccessful. Try again later\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"First Name\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"First Name\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"515717682822-8eqgnt4a6f4r0blfm2hh6i8gi20hh9g0.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 169\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account? Sign In' : \"Don't have an account ? Sign Up.\"))))));\n}\n\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","useDispatch","useHistory","LockOutlinedIcon","useStyles","Input","Icon","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","handleChange","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokeId","type","data","push","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"sources":["D:/projects/mern2/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'\r\nimport { GoogleLogin } from 'react-google-login';\r\n// import { GoogleLogin } from '@react-oauth/google';\r\nimport { useDispatch  } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './styles';\r\nimport Input from './input';\r\nimport Icon from './icon';\r\n\r\nfunction Auth() {\r\n    const classes = useStyles();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword)\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n    const handleChange = () => {\r\n\r\n    }\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n        handleShowPassword(true);\r\n    }\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokeId;\r\n        try{\r\n            dispatch({ type: 'AUTH', data: { result, token } });\r\n            history.push('/')\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        console.log(res);\r\n    }\r\n    const googleFailure = (error) => {\r\n        console.log(error)\r\n        console.log(\"Google Sign In was usuccessful. Try again later\");\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h5\">{isSignup ? 'Sign up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignup && (\r\n                                <>\r\n                                    <Input name=\"First Name\" label=\"First Name\" handleChange={handleChange} autoFocus />\r\n                                    <Input name=\"First Name\" label=\"First Name\" handleChange={handleChange} half />\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        {isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    <GoogleLogin\r\n                        clientId=\"515717682822-8eqgnt4a6f4r0blfm2hh6i8gi20hh9g0.apps.googleusercontent.com\"\r\n                        render={(renderProps) => (\r\n                            <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                                Google Sign In\r\n                            </Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy='single_host_origin'\r\n                    />\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}>\r\n                                {isSignup ? 'Already have an account? Sign In' : \"Don't have an account ? Sign Up.\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth"],"mappings":"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"},"metadata":{},"sourceType":"module"}